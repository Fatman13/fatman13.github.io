<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jacoco | Fatman13]]></title>
  <link href="http://Fatman13.github.io/blog/categories/jacoco/atom.xml" rel="self"/>
  <link href="http://Fatman13.github.io/"/>
  <updated>2016-01-01T14:44:56+08:00</updated>
  <id>http://Fatman13.github.io/</id>
  <author>
    <name><![CDATA[Fatman13]]></name>
    <email><![CDATA[tctctcly@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何使用Jacoco远程统计tomcat服务的覆盖率]]></title>
    <link href="http://Fatman13.github.io/blog/2014/02/27/ru-he-shi-yong-jacocoyuan-cheng-tong-ji-tomcatfu-wu-de-fu-gai-lu/"/>
    <updated>2014-02-27T20:18:00+08:00</updated>
    <id>http://Fatman13.github.io/blog/2014/02/27/ru-he-shi-yong-jacocoyuan-cheng-tong-ji-tomcatfu-wu-de-fu-gai-lu</id>
    <content type="html"><![CDATA[<p>本文将简单介绍如何使用<code>Jacoco</code>生成远程<code>tomcat</code>服务的覆盖率报告。<br/>
(<em>注：使用<code>jacoco</code>打开远程服务端口，有一定安全风险。</em>)</p>

<!--more-->


<h1>软件安装</h1>

<ul>
<li><a href="http://ant.apache.org/bindownload.cgi">Ant</a></li>
<li><a href="http://www.eclemma.org/jacoco/">Jacoco</a></li>
</ul>


<h1>远程Tomcat服务配置</h1>

<ul>
<li><code>sh shutdown.sh</code>先关闭<code>tomcat</code>服务。</li>
<li>修改<code>bin/catalina.sh</code>中<code>JAVA_OPTS</code>的配置。</li>
</ul>


<p>``` sh</p>

<h1>-javaagent: 的后面跟jacoco的安装路径</h1>

<h1>includes= 选项，选择你要覆盖率的服务</h1>

<h1>port= 选项，选择你要打开的端口</h1>

<h1>address= 选项，tomcat服务所在机器的ip地址（如果想在跟tomcat服务同一台机器上执行ant任务的话，需要改为127.0.0.1）</h1>

<p>JAVA_OPTS=&ldquo;-javaagent:/path/to/your/jacoco_0.6.4/lib/jacocoagent.jar=includes=com.baidu.*,output=tcpserver,port=8893,address=10.81.14.77&rdquo;
<code>``
-</code>sh startup.sh<code>重新启动</code>tomcat`服务。</p>

<h1>本地Ant任务配置</h1>

<ul>
<li>配置<code>build.xml</code>。</li>
</ul>


<p>``` xml
&lt;?xml version=&ldquo;1.0&rdquo; ?>
<project name="Lengyu" xmlns:jacoco="antlib:org.jacoco.ant" default="jacoco"></p>

<pre><code>&lt;!--Jacoco的安装路径--&gt;
&lt;property name="jacocoantPath" value="/home/work/software/jacoco_0.6.4/lib/jacocoant.jar"/&gt;
&lt;!--最终生成.exec文件的路径，Jacoco就是根据这个文件生成最终的报告的--&gt;
&lt;property name="jacocoexecPath" value="/home/work/local/hudson_home/workspace/wg_merchant_oc_regression/jacoco.exec"/&gt;
&lt;!--生成覆盖率报告的路径--&gt;
&lt;property name="reportfolderPath" value="E:/Libs/coverage_ant_task/report/"/&gt;
&lt;!--远程tomcat服务的ip地址--&gt;
&lt;property name="server_ip" value="10.81.14.77"/&gt;
&lt;!--前面配置的远程tomcat服务打开的端口，要跟上面配置的一样--&gt;
&lt;property name="server_port" value="8893"/&gt;
&lt;!--源代码路径--&gt;
&lt;property name="checkOrderSrcpath" value="E:/Src/ordercenter/ordercenter-biz/src/main/java/" /&gt;
&lt;!--.class文件路径--&gt;
&lt;property name="checkOrderClasspath" value="E:/Src/ordercenter/ordercenter-biz/target/classes/com/baidu/ordercenter/service/Impl" /&gt;

&lt;!--让ant知道去哪儿找Jacoco--&gt;
&lt;taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml"&gt;
    &lt;classpath path="${jacocoantPath}" /&gt;
&lt;/taskdef&gt;

&lt;!--dump任务:
    根据前面配置的ip地址，和端口号，
    访问目标tomcat服务，并生成.exec文件。--&gt;
&lt;target name="dump"&gt;
    &lt;jacoco:dump address="${server_ip}" reset="false" destfile="${jacocoexecPath}" port="${server_port}" append="true"/&gt;
&lt;/target&gt;

&lt;!--jacoco任务:
    根据前面配置的源代码路径和.class文件路径，
    根据dump后，生成的.exec文件，生成最终的html覆盖率报告。--&gt;
&lt;target name="report"&gt;
    &lt;delete dir="${reportfolderPath}" /&gt;
    &lt;mkdir dir="${reportfolderPath}" /&gt;

    &lt;jacoco:report&gt;
        &lt;executiondata&gt;
            &lt;file file="${jacocoexecPath}" /&gt;
        &lt;/executiondata&gt;

        &lt;structure name="JaCoCo Report"&gt;
            &lt;group name="Check Order related"&gt;          
                &lt;classfiles&gt;
                    &lt;fileset dir="${checkOrderClasspath}" /&gt;
                &lt;/classfiles&gt;
                &lt;sourcefiles encoding="gbk"&gt;
                    &lt;fileset dir="${checkOrderSrcpath}" /&gt;
                &lt;/sourcefiles&gt;
            &lt;/group&gt;
        &lt;/structure&gt;

        &lt;html destdir="${reportfolderPath}" encoding="utf-8" /&gt;         
    &lt;/jacoco:report&gt;
&lt;/target&gt;
</code></pre>

<p></project>
```</p>

<h1>生成覆盖率报告</h1>

<ul>
<li>执行<code>ant dump</code>。成功的话，应会有如下输出。</li>
</ul>


<p>```
[<a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#x3a;&#119;&#x6f;&#114;&#107;&#x40;&#x73;&#x74;&#x30;&#x31;&#x2d;&#101;&#99;&#x6f;&#109;&#x2d;&#106;&#x6e;&#x32;&#46;&#x73;&#x74;&#x30;&#49;&#46;&#x62;&#x61;&#105;&#x64;&#x75;&#46;&#99;&#x6f;&#x6d;">&#x77;&#111;&#114;&#107;&#x40;&#x73;&#x74;&#48;&#49;&#45;&#x65;&#99;&#x6f;&#x6d;&#x2d;&#106;&#x6e;&#x32;&#x2e;&#x73;&#x74;&#x30;&#49;&#x2e;&#x62;&#x61;&#105;&#x64;&#117;&#46;&#99;&#x6f;&#109;</a> ant]$ ant dump
Buildfile: /home/work/local/hudson_home/workspace/wg_merchant_oc_regression/ant/build.xml</p>

<p>dump:
[jacoco:dump] Connecting to /10.81.14.77:8893
[jacoco:dump] Dumping execution data to /home/work/local/hudson_home/workspace/wg_merchant_oc_regression/jacoco.exec</p>

<p>BUILD SUCCESSFUL
Total time: 0 seconds
```</p>

<ul>
<li>最后执行<code>ant report</code>。<code>jacoco</code>就会在你指定的路径生成覆盖率报告了。</li>
</ul>


<h1>附录</h1>

<ul>
<li>更多关于<code>Jacocoagent</code>以及各种<code>task</code>可以参考<a href="http://www.eclemma.org/jacoco/trunk/doc/ant.html">官方文档</a></li>
<li><code>Jenkins</code>的<code>Jacoco plugin</code>可以根据<code>.exec</code>文件直接生成覆盖率报告，并在<code>Jenkins</code>中生成图表等等。那样的话，<code>ant report</code>这个任务就没用了。</li>
<li>如有问题，可发email至<a href="mailto:lengyu@baidu.com">lengyu@baidu.com</a>。</li>
</ul>

]]></content>
  </entry>
  
</feed>
